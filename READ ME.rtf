{\rtf1\ansi\ansicpg1252\cocoartf2639
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fmodern\fcharset0 Courier;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red255\green255\blue255;}
{\*\expandedcolortbl;;\csgray\c0;\cssrgb\c100000\c100000\c100000;}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 # description of files\
\
- \'93Start\'94 folder contains 10 example clips \
- the r and rmd version of feature extraction are identical. Running either one will output a csv file with a filename that ends with today\'92s date. This is the feature file used in the model\
- the two csv files (top 2 strategies and keywordList are called in the feature extraction.r /(.rmd) file\
- use \'93run detector.ipynb\'94 to import the model and make predictions. update the filename of the features\
- \'93building models\'94 folder contains original dataset used to build the model, where the sav files are created from\
\
# note\
Update the \'93keywordList.csv\'94 and \'93df_Top2strategiesSelected.csv\'94 periodically. The feature extraction code will break if it cannot find the name of a problem item in the files. \
\
# library/package version\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 \CocoaLigature0 Python version 3.8.8\
R version 4.1.1\
\cf0 \CocoaLigature1 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 pandas (1.0.5)\
numpy (1.20.1)\cb3 \expnd0\expndtw0\kerning0
\
\cb1 \kerning1\expnd0\expndtw0 sklearn (0.24.1)\cb3 \expnd0\expndtw0\kerning0
\
\cb1 \kerning1\expnd0\expndtw0 xgboost (1.5.0)\
rpy2 (3.5.4)\
\
import pickle\
import random\
\
from xgboost import XGBClassifier\
from sklearn import preprocessing\
from sklearn.model_selection import GroupKFold, train_test_split\
from sklearn.metrics import classification_report, roc_curve, roc_auc_score, confusion_matrix, accuracy_score, f1_score, cohen_kappa_score\
}